/* eslint-disable react-hooks/exhaustive-deps */
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import { getCalendarListData } from "../functions/calendarList";
import { getCalendarList } from "../functions/localStorage";

import { calendar } from "../types/calendar";
import { css } from "@emotion/react";
import { colors } from "../styles/colors";
import { baseURL } from "../baseURL";
import { deleteCalendarList } from "../functions/localStorage";

const Home: NextPage = () => {
  const [calendarList, setCalendarList] = useState<calendar[]>([]);
  const [isEditable, setIsEditable] = useState<boolean>(false);
  useEffect(() => {
    const tmpCalendarList = getCalendarList();
    console.log("get", tmpCalendarList);
    getCalendarListData(tmpCalendarList).then((calendarList) => {
      console.log("calendarList is", calendarList);
      console.log("length", calendarList.length);
      if (calendarList.length !== 0) setCalendarList(calendarList);
    });
  }, []);
  return (
    <div>
      <Head>
        <title>すけちょ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        css={css`
          padding: 16px;
          display: flex;
          margin: 0 12px;
          justify-content: space-between;
          align-items: center;
          border-bottom: 1px solid ${colors.dark};
        `}
      >
        <p
          css={css`
            background-color: ${colors.sub};
            width: 100px;
            height: 40px;
            border-radius: 24px;
            text-align: center;
            padding: 0;
            margin: 0;
            color: ${colors.white};
            line-height: 40px;
            font-weight: bold;
          `}
        >
          日程一覧
        </p>
        <div
          css={css`
            display: flex;
            gap: 8px;
            align-items: center;
          `}
        >
          {isEditable ? (
            <button
              onClick={() => setIsEditable(false)}
              css={css`
                width: 40px;
                height: 40px;
                background-color: ${colors.main};
                margin: 0;
                padding: 0;
                border: none;
                border-radius: 8px;
              `}
            >
              ✕
            </button>
          ) : (
            <button
              onClick={() => setIsEditable(true)}
              css={css`
                width: 40px;
                height: 40px;
                background-color: ${colors.main};
                margin: 0;
                padding: 0;
                border: none;
                border-radius: 8px;
              `}
            >
              ☑
            </button>
          )}

          <a
            href={`${baseURL}/createCalendar`}
            css={css`
              width: 100px;
              height: 32px;
              background-color: ${colors.accent};
              border: none;
              border-radius: 16px;
              color: ${colors.white};
              text-align: center;
              line-height: 32px;
            `}
          >
            新規作成
          </a>
        </div>
      </div>
      <div
        css={css`
          margin: 0 12px;
        `}
      >
        {calendarList.map((calendar) => (
          <div
            key={calendar.id}
            css={css`
              display: flex;
              align-items: center;
              justify-content: space-between;
              padding: 8px;
              border-bottom: 1px solid ${colors.dark};
            `}
          >
            <div
              css={css`
                display: flex;
                padding: 8px;
                gap: 8px;
                align-items: center;
              `}
            >
              <div
                css={() => css`
                  background-color: ${calendar.confirmedEvent
                    ? colors.done
                    : colors.sub};
                  padding: 8px;
                  width: 48px;
                  height: 48px;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  color: ${colors.white};
                  border-radius: 8px;
                  font-size: 24px;
                `}
              >
                {calendar.confirmedEvent ? "決" : "未"}
              </div>
              <p
                css={css`
                  font-size: 24px;
                  padding: 0;
                  font-weight: bold;
                  margin: 0;
                `}
              >
                {calendar.name}
              </p>
            </div>
            {isEditable ? (
              <button
                onClick={() => {
                  deleteCalendarList(calendar.id);
                  let tmpList = [...calendarList];
                  tmpList = tmpList.filter((_) => _.id !== calendar.id);
                  setCalendarList(tmpList);
                }}
              >
                d
              </button>
            ) : (
              <a href={`${baseURL}/calendar/${calendar.id}`}>{">"}</a>
            )}
          </div>
        ))}
      </div>
    </div>
  );
};

export default Home;
